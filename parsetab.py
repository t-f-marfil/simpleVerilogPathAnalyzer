
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ALLHIGH ALLLOW ALWAYS ALWAYSCOMB ALWAYSFF ASSIGN BEGIN ELSE END ENDMODULE EQ GEQ ID IF INPUT LEQ LITWIRE LOCALPARAM LOGIC LSHIFT MODULE NEGEDGE NONBLOCK NUMBER OUTPUT PARAMETER POSEDGE REG RSHIFT WIRE\n    source : moduledec source \n           | empty\n    \n    moduledec : MODULE ID paramdec portdec ';' modulecontent ENDMODULE\n              | MODULE ID portdec ';' modulecontent ENDMODULE\n    \n    paramdec : '#' '(' params ')'\n    \n    params : oneparam paramplus \n           | empty\n    \n    paramplus : ',' oneparam paramplus \n              | empty\n    \n    oneparam : PARAMETER ID '=' arithexpr\n    \n    arithexpr : NUMBER\n    \n    portdec : '(' ports \n    \n    ports : porttype  portplus\n          | ')'\n    \n    portplus : wireslice idsterminal portplus \n             | empty\n    \n    idsterminal : ID portterminal\n                | ID ',' idsterminal\n    \n    portterminal : ')'\n                 | ',' porttype\n    \n    wireslice : '[' arithexpr ':' arithexpr ']'\n              | empty\n    \n    porttype : inout\n             | inout wiretype\n    \n    inout : INPUT\n          | OUTPUT\n    \n    modulecontent : wiredec ';' modulecontent\n                  | assign ';' modulecontent\n                  | always modulecontent\n                  | moduleinst ';' modulecontent\n                  | empty\n    \n    wiredec : wiretype '[' arithexpr ':' arithexpr ']' idassigns\n            | wiretype '[' arithexpr ':' arithexpr ']' ID '[' arithexpr ':' arithexpr ']'\n            | wiretype idassigns\n    \n    idassigns : oneidassign \n              | oneidassign ',' idassigns\n    \n    oneidassign : ID \n                | ID '=' wireexpr\n    \n    wiretype : WIRE\n             | REG\n             | LOGIC\n    \n    assign : ASSIGN lhs '=' wireexpr\n    \n    always : ALWAYS '@' sensitivity alwayscontblock\n           | ALWAYSFF '@' sensitivity alwayscontblock\n           | ALWAYSCOMB alwayscontblock\n    \n    sensitivity : '(' edge ID ')'\n    \n    edge : POSEDGE\n         | NEGEDGE\n    \n    alwayscontblock : BEGIN alwayscont END \n    \n    alwayscont : oneassign ';' alwayscont\n               | ifblock alwayscont\n               | ifblock elseblock alwayscont\n               | empty\n    \n    oneassign : lhs '=' wireexpr\n              | lhs NONBLOCK wireexpr\n    \n    ifblock : IF '(' wireexpr ')' BEGIN alwayscont END\n    \n    elseblock : ELSE ifblock\n              | ELSE ifblock elseblock\n              | ELSE BEGIN alwayscont END\n    \n    lhs : ID\n        | ID '[' arithexpr ':' arithexpr ']'\n        | '{' lhsconcat '}'\n    \n    lhsconcat : lhs\n              | lhs ',' lhsconcat\n    \n    wireexpr : wireval\n             | wireval wireop wireexpr\n             | wireval '?' wireexpr ':' wireexpr\n    \n    wireval : ALLHIGH\n            | ALLLOW\n            | LITWIRE\n            | arithexpr\n            | '{' wireconcat '}'\n            | '(' wireexpr ')'\n            | ID '[' arithexpr ':' arithexpr ']'\n            | ID '[' wireexpr ']'\n            | unaop wireval\n    \n    unaop : '~'\n          | '&'\n          | '^'\n          | '|'\n    \n    wireval : ID\n    \n    wireconcat : wireexpr\n               | wireexpr ',' wireconcat\n    \n    wireop : '+'\n           | '-'\n           | '*'\n           | '&'\n           | '|'\n           | '^'\n           | '<'\n           | '>'\n           | LSHIFT\n           | RSHIFT\n           | EQ\n           | GEQ\n           | LEQ\n    \n    moduleinst : ID ID '(' modportassign ')'\n    \n    modportassign : oneportassign\n                  | oneportassign ',' modportassign\n                  | empty\n    \n    oneportassign : wireexpr\n                  | '.' ID '(' wireexpr ')'\n    \n    empty : \n    "
    
_lr_action_items = {'MODULE':([0,2,47,72,],[4,4,-4,-3,]),'$end':([0,1,2,3,5,47,72,],[-103,0,-103,-2,-1,-4,-3,]),'ID':([4,12,15,17,18,19,20,21,25,28,29,33,34,35,39,41,42,44,48,49,51,58,61,62,68,73,78,79,80,89,96,97,98,101,106,112,113,114,115,116,117,124,125,126,127,128,129,130,131,133,135,136,137,140,141,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,172,173,177,182,186,187,190,196,201,202,210,],[6,21,-103,-23,-25,-26,21,46,21,54,57,-39,-40,-41,67,69,-22,-24,21,21,21,57,-45,57,-103,100,100,54,100,57,-17,69,-19,100,147,100,100,-77,-78,-79,-80,57,-43,169,-47,-48,-44,-49,57,57,100,100,100,-18,-20,100,100,100,100,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-57,57,-21,100,100,199,-58,100,-59,57,-56,]),'#':([6,],[9,]),'(':([6,7,9,46,59,60,63,73,78,80,92,101,112,113,114,115,116,117,135,136,137,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,182,186,196,],[10,10,13,73,85,85,-5,101,101,101,137,101,101,101,-77,-78,-79,-80,101,101,101,101,101,182,101,101,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,101,101,101,]),';':([8,11,14,15,16,17,18,19,23,24,26,33,34,35,40,42,44,53,54,55,68,71,88,95,96,98,100,107,108,109,110,111,119,120,121,140,141,145,165,174,175,180,183,185,194,198,199,205,208,213,],[12,20,-12,-103,-14,-23,-25,-26,48,49,51,-39,-40,-41,-13,-16,-24,-34,-37,-35,-103,-11,131,-15,-17,-19,-81,-65,-68,-69,-70,-71,-38,-36,-42,-18,-20,-97,-76,-54,-55,-73,-66,-72,-75,-32,-37,-67,-74,-33,]),')':([10,13,36,37,38,64,66,69,71,73,93,100,102,103,104,105,107,108,109,110,111,138,139,144,146,165,169,176,180,181,183,185,194,195,204,205,208,],[16,-103,63,-103,-7,-6,-9,98,-11,-103,-103,-81,145,-98,-100,-101,-65,-68,-69,-70,-71,-8,-10,180,-103,-76,189,192,-73,-99,-66,-72,-75,204,-102,-67,-74,]),'INPUT':([10,97,],[18,18,]),'OUTPUT':([10,97,],[19,19,]),'ASSIGN':([12,20,25,48,49,51,61,125,129,130,],[29,29,29,29,29,29,-45,-43,-44,-49,]),'ALWAYS':([12,20,25,48,49,51,61,125,129,130,],[30,30,30,30,30,30,-45,-43,-44,-49,]),'ALWAYSFF':([12,20,25,48,49,51,61,125,129,130,],[31,31,31,31,31,31,-45,-43,-44,-49,]),'ALWAYSCOMB':([12,20,25,48,49,51,61,125,129,130,],[32,32,32,32,32,32,-45,-43,-44,-49,]),'ENDMODULE':([12,20,22,25,27,45,48,49,50,51,61,74,75,76,125,129,130,],[-103,-103,47,-103,-31,72,-103,-103,-29,-103,-45,-27,-28,-30,-43,-44,-49,]),'WIRE':([12,17,18,19,20,25,48,49,51,61,125,129,130,],[33,33,-25,-26,33,33,33,33,33,-45,-43,-44,-49,]),'REG':([12,17,18,19,20,25,48,49,51,61,125,129,130,],[34,34,-25,-26,34,34,34,34,34,-45,-43,-44,-49,]),'LOGIC':([12,17,18,19,20,25,48,49,51,61,125,129,130,],[35,35,-25,-26,35,35,35,35,35,-45,-43,-44,-49,]),'PARAMETER':([13,65,],[39,39,]),'[':([15,17,18,19,28,33,34,35,44,57,68,96,98,100,140,141,199,],[43,-23,-25,-26,52,-39,-40,-41,-24,81,43,-17,-19,143,-18,-20,206,]),'{':([29,58,62,73,78,80,89,101,112,113,114,115,116,117,124,131,133,135,136,137,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,172,173,182,186,190,196,201,202,210,],[58,58,58,112,112,112,58,112,112,112,-77,-78,-79,-80,58,58,58,112,112,112,112,112,112,112,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-57,58,112,112,-58,112,-59,58,-56,]),'@':([30,31,],[59,60,]),'BEGIN':([32,84,86,134,189,192,],[62,62,62,173,-46,202,]),',':([37,54,55,57,69,71,83,93,100,103,105,107,108,109,110,111,119,123,139,164,165,180,183,185,194,199,200,204,205,208,],[65,-37,79,-60,97,-11,124,65,-81,146,-101,-65,-68,-69,-70,-71,-38,-62,-10,186,-76,-73,-66,-72,-75,-37,-61,-102,-67,-74,]),'NUMBER':([43,52,73,78,80,81,94,99,101,112,113,114,115,116,117,118,135,136,137,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,167,182,186,193,196,206,211,],[71,71,71,71,71,71,71,71,71,71,71,-77,-78,-79,-80,71,71,71,71,71,71,71,71,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,71,71,71,71,71,71,71,]),'=':([54,56,57,67,91,123,199,200,],[78,80,-60,94,135,-62,78,-61,]),'}':([57,71,82,83,100,107,108,109,110,111,123,163,164,165,168,180,183,185,194,197,200,205,208,],[-60,-11,123,-63,-81,-65,-68,-69,-70,-71,-62,185,-82,-76,-64,-73,-66,-72,-75,-83,-61,-67,-74,]),'NONBLOCK':([57,91,123,200,],[-60,136,-62,-61,]),'IF':([62,89,131,133,134,172,173,190,201,202,210,],[92,92,92,92,92,-57,92,-58,-59,92,-56,]),'END':([62,87,89,90,131,132,133,170,171,172,173,190,191,201,202,207,210,],[-103,130,-103,-53,-103,-51,-103,-50,-52,-57,-103,-58,201,-59,-103,210,-56,]),':':([70,71,77,100,107,108,109,110,111,122,165,178,180,183,184,185,194,205,208,209,],[99,-11,118,-81,-65,-68,-69,-70,-71,167,-76,193,-73,-66,196,-72,-75,-67,-74,211,]),'?':([71,100,107,108,109,110,111,165,178,180,185,194,208,],[-11,-81,149,-68,-69,-70,-71,-76,-71,-73,-72,-75,-74,]),'+':([71,100,107,108,109,110,111,165,178,180,185,194,208,],[-11,-81,150,-68,-69,-70,-71,-76,-71,-73,-72,-75,-74,]),'-':([71,100,107,108,109,110,111,165,178,180,185,194,208,],[-11,-81,151,-68,-69,-70,-71,-76,-71,-73,-72,-75,-74,]),'*':([71,100,107,108,109,110,111,165,178,180,185,194,208,],[-11,-81,152,-68,-69,-70,-71,-76,-71,-73,-72,-75,-74,]),'&':([71,73,78,80,100,101,107,108,109,110,111,112,113,114,115,116,117,135,136,137,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,165,178,180,182,185,186,194,196,208,],[-11,115,115,115,-81,115,153,-68,-69,-70,-71,115,115,-77,-78,-79,-80,115,115,115,115,115,115,115,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-76,-71,-73,115,-72,115,-75,115,-74,]),'|':([71,73,78,80,100,101,107,108,109,110,111,112,113,114,115,116,117,135,136,137,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,165,178,180,182,185,186,194,196,208,],[-11,117,117,117,-81,117,154,-68,-69,-70,-71,117,117,-77,-78,-79,-80,117,117,117,117,117,117,117,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-76,-71,-73,117,-72,117,-75,117,-74,]),'^':([71,73,78,80,100,101,107,108,109,110,111,112,113,114,115,116,117,135,136,137,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,165,178,180,182,185,186,194,196,208,],[-11,116,116,116,-81,116,155,-68,-69,-70,-71,116,116,-77,-78,-79,-80,116,116,116,116,116,116,116,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-76,-71,-73,116,-72,116,-75,116,-74,]),'<':([71,100,107,108,109,110,111,165,178,180,185,194,208,],[-11,-81,156,-68,-69,-70,-71,-76,-71,-73,-72,-75,-74,]),'>':([71,100,107,108,109,110,111,165,178,180,185,194,208,],[-11,-81,157,-68,-69,-70,-71,-76,-71,-73,-72,-75,-74,]),'LSHIFT':([71,100,107,108,109,110,111,165,178,180,185,194,208,],[-11,-81,158,-68,-69,-70,-71,-76,-71,-73,-72,-75,-74,]),'RSHIFT':([71,100,107,108,109,110,111,165,178,180,185,194,208,],[-11,-81,159,-68,-69,-70,-71,-76,-71,-73,-72,-75,-74,]),'EQ':([71,100,107,108,109,110,111,165,178,180,185,194,208,],[-11,-81,160,-68,-69,-70,-71,-76,-71,-73,-72,-75,-74,]),'GEQ':([71,100,107,108,109,110,111,165,178,180,185,194,208,],[-11,-81,161,-68,-69,-70,-71,-76,-71,-73,-72,-75,-74,]),'LEQ':([71,100,107,108,109,110,111,165,178,180,185,194,208,],[-11,-81,162,-68,-69,-70,-71,-76,-71,-73,-72,-75,-74,]),']':([71,100,107,108,109,110,111,142,165,166,178,179,180,183,185,188,194,203,205,208,212,],[-11,-81,-65,-68,-69,-70,-71,177,-76,187,-71,194,-73,-66,-72,200,-75,208,-67,-74,213,]),'.':([73,146,],[106,106,]),'ALLHIGH':([73,78,80,101,112,113,114,115,116,117,135,136,137,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,182,186,196,],[108,108,108,108,108,108,-77,-78,-79,-80,108,108,108,108,108,108,108,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,108,108,108,]),'ALLLOW':([73,78,80,101,112,113,114,115,116,117,135,136,137,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,182,186,196,],[109,109,109,109,109,109,-77,-78,-79,-80,109,109,109,109,109,109,109,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,109,109,109,]),'LITWIRE':([73,78,80,101,112,113,114,115,116,117,135,136,137,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,182,186,196,],[110,110,110,110,110,110,-77,-78,-79,-80,110,110,110,110,110,110,110,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,110,110,110,]),'~':([73,78,80,101,112,113,114,115,116,117,135,136,137,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,182,186,196,],[114,114,114,114,114,114,-77,-78,-79,-80,114,114,114,114,114,114,114,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,114,114,114,]),'POSEDGE':([85,],[127,]),'NEGEDGE':([85,],[128,]),'ELSE':([89,172,210,],[134,134,-56,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'source':([0,2,],[1,5,]),'moduledec':([0,2,],[2,2,]),'empty':([0,2,12,13,15,20,25,37,48,49,51,62,68,73,89,93,131,133,146,173,202,],[3,3,27,38,42,27,27,66,27,27,27,90,42,104,90,66,90,90,104,90,90,]),'paramdec':([6,],[7,]),'portdec':([6,7,],[8,11,]),'ports':([10,],[14,]),'porttype':([10,97,],[15,141,]),'inout':([10,97,],[17,17,]),'modulecontent':([12,20,25,48,49,51,],[22,45,50,74,75,76,]),'wiredec':([12,20,25,48,49,51,],[23,23,23,23,23,23,]),'assign':([12,20,25,48,49,51,],[24,24,24,24,24,24,]),'always':([12,20,25,48,49,51,],[25,25,25,25,25,25,]),'moduleinst':([12,20,25,48,49,51,],[26,26,26,26,26,26,]),'wiretype':([12,17,20,25,48,49,51,],[28,44,28,28,28,28,28,]),'params':([13,],[36,]),'oneparam':([13,65,],[37,93,]),'portplus':([15,68,],[40,95,]),'wireslice':([15,68,],[41,41,]),'idassigns':([28,79,187,],[53,120,198,]),'oneidassign':([28,79,187,],[55,55,55,]),'lhs':([29,58,62,89,124,131,133,173,202,],[56,83,91,91,83,91,91,91,91,]),'alwayscontblock':([32,84,86,],[61,125,129,]),'paramplus':([37,93,],[64,138,]),'idsterminal':([41,97,],[68,140,]),'arithexpr':([43,52,73,78,80,81,94,99,101,112,113,118,135,136,137,143,146,148,149,167,182,186,193,196,206,211,],[70,77,111,111,111,122,139,142,111,111,111,166,111,111,111,178,111,111,111,188,111,111,203,111,209,212,]),'lhsconcat':([58,124,],[82,168,]),'sensitivity':([59,60,],[84,86,]),'alwayscont':([62,89,131,133,173,202,],[87,132,170,171,191,207,]),'oneassign':([62,89,131,133,173,202,],[88,88,88,88,88,88,]),'ifblock':([62,89,131,133,134,173,202,],[89,89,89,89,172,89,89,]),'portterminal':([69,],[96,]),'modportassign':([73,146,],[102,181,]),'oneportassign':([73,146,],[103,103,]),'wireexpr':([73,78,80,101,112,135,136,137,143,146,148,149,182,186,196,],[105,119,121,144,164,174,175,176,179,105,183,184,195,164,205,]),'wireval':([73,78,80,101,112,113,135,136,137,143,146,148,149,182,186,196,],[107,107,107,107,107,165,107,107,107,107,107,107,107,107,107,107,]),'unaop':([73,78,80,101,112,113,135,136,137,143,146,148,149,182,186,196,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'edge':([85,],[126,]),'elseblock':([89,172,],[133,190,]),'wireop':([107,],[148,]),'wireconcat':([112,186,],[163,197,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> source","S'",1,None,None,None),
  ('source -> moduledec source','source',2,'p_source','svyacc.py',12),
  ('source -> empty','source',1,'p_source','svyacc.py',13),
  ('moduledec -> MODULE ID paramdec portdec ; modulecontent ENDMODULE','moduledec',7,'p_moduledec','svyacc.py',26),
  ('moduledec -> MODULE ID portdec ; modulecontent ENDMODULE','moduledec',6,'p_moduledec','svyacc.py',27),
  ('paramdec -> # ( params )','paramdec',4,'p_paramdec','svyacc.py',42),
  ('params -> oneparam paramplus','params',2,'p_params','svyacc.py',50),
  ('params -> empty','params',1,'p_params','svyacc.py',51),
  ('paramplus -> , oneparam paramplus','paramplus',3,'p_paramplus','svyacc.py',64),
  ('paramplus -> empty','paramplus',1,'p_paramplus','svyacc.py',65),
  ('oneparam -> PARAMETER ID = arithexpr','oneparam',4,'p_oneparam','svyacc.py',78),
  ('arithexpr -> NUMBER','arithexpr',1,'p_arithexpr','svyacc.py',86),
  ('portdec -> ( ports','portdec',2,'p_portdec','svyacc.py',94),
  ('ports -> porttype portplus','ports',2,'p_ports','svyacc.py',102),
  ('ports -> )','ports',1,'p_ports','svyacc.py',103),
  ('portplus -> wireslice idsterminal portplus','portplus',3,'p_portplus','svyacc.py',121),
  ('portplus -> empty','portplus',1,'p_portplus','svyacc.py',122),
  ('idsterminal -> ID portterminal','idsterminal',2,'p_idsterminal','svyacc.py',135),
  ('idsterminal -> ID , idsterminal','idsterminal',3,'p_idsterminal','svyacc.py',136),
  ('portterminal -> )','portterminal',1,'p_portterminal','svyacc.py',147),
  ('portterminal -> , porttype','portterminal',2,'p_portterminal','svyacc.py',148),
  ('wireslice -> [ arithexpr : arithexpr ]','wireslice',5,'p_wireslice','svyacc.py',158),
  ('wireslice -> empty','wireslice',1,'p_wireslice','svyacc.py',159),
  ('porttype -> inout','porttype',1,'p_porttype','svyacc.py',170),
  ('porttype -> inout wiretype','porttype',2,'p_porttype','svyacc.py',171),
  ('inout -> INPUT','inout',1,'p_inout','svyacc.py',183),
  ('inout -> OUTPUT','inout',1,'p_inout','svyacc.py',184),
  ('modulecontent -> wiredec ; modulecontent','modulecontent',3,'p_modulecontent','svyacc.py',191),
  ('modulecontent -> assign ; modulecontent','modulecontent',3,'p_modulecontent','svyacc.py',192),
  ('modulecontent -> always modulecontent','modulecontent',2,'p_modulecontent','svyacc.py',193),
  ('modulecontent -> moduleinst ; modulecontent','modulecontent',3,'p_modulecontent','svyacc.py',194),
  ('modulecontent -> empty','modulecontent',1,'p_modulecontent','svyacc.py',195),
  ('wiredec -> wiretype [ arithexpr : arithexpr ] idassigns','wiredec',7,'p_wiredec','svyacc.py',217),
  ('wiredec -> wiretype [ arithexpr : arithexpr ] ID [ arithexpr : arithexpr ]','wiredec',12,'p_wiredec','svyacc.py',218),
  ('wiredec -> wiretype idassigns','wiredec',2,'p_wiredec','svyacc.py',219),
  ('idassigns -> oneidassign','idassigns',1,'p_ids','svyacc.py',248),
  ('idassigns -> oneidassign , idassigns','idassigns',3,'p_ids','svyacc.py',249),
  ('oneidassign -> ID','oneidassign',1,'p_idassign','svyacc.py',259),
  ('oneidassign -> ID = wireexpr','oneidassign',3,'p_idassign','svyacc.py',260),
  ('wiretype -> WIRE','wiretype',1,'p_wiretype','svyacc.py',271),
  ('wiretype -> REG','wiretype',1,'p_wiretype','svyacc.py',272),
  ('wiretype -> LOGIC','wiretype',1,'p_wiretype','svyacc.py',273),
  ('assign -> ASSIGN lhs = wireexpr','assign',4,'p_assign','svyacc.py',281),
  ('always -> ALWAYS @ sensitivity alwayscontblock','always',4,'p_always','svyacc.py',289),
  ('always -> ALWAYSFF @ sensitivity alwayscontblock','always',4,'p_always','svyacc.py',290),
  ('always -> ALWAYSCOMB alwayscontblock','always',2,'p_always','svyacc.py',291),
  ('sensitivity -> ( edge ID )','sensitivity',4,'p_sensitivity','svyacc.py',304),
  ('edge -> POSEDGE','edge',1,'p_edge','svyacc.py',311),
  ('edge -> NEGEDGE','edge',1,'p_edge','svyacc.py',312),
  ('alwayscontblock -> BEGIN alwayscont END','alwayscontblock',3,'p_alwayscontblock','svyacc.py',320),
  ('alwayscont -> oneassign ; alwayscont','alwayscont',3,'p_alwayscont','svyacc.py',327),
  ('alwayscont -> ifblock alwayscont','alwayscont',2,'p_alwayscont','svyacc.py',328),
  ('alwayscont -> ifblock elseblock alwayscont','alwayscont',3,'p_alwayscont','svyacc.py',329),
  ('alwayscont -> empty','alwayscont',1,'p_alwayscont','svyacc.py',330),
  ('oneassign -> lhs = wireexpr','oneassign',3,'p_oneassign','svyacc.py',347),
  ('oneassign -> lhs NONBLOCK wireexpr','oneassign',3,'p_oneassign','svyacc.py',348),
  ('ifblock -> IF ( wireexpr ) BEGIN alwayscont END','ifblock',7,'p_ifblock','svyacc.py',359),
  ('elseblock -> ELSE ifblock','elseblock',2,'p_elseblock','svyacc.py',366),
  ('elseblock -> ELSE ifblock elseblock','elseblock',3,'p_elseblock','svyacc.py',367),
  ('elseblock -> ELSE BEGIN alwayscont END','elseblock',4,'p_elseblock','svyacc.py',368),
  ('lhs -> ID','lhs',1,'p_lhs','svyacc.py',385),
  ('lhs -> ID [ arithexpr : arithexpr ]','lhs',6,'p_lhs','svyacc.py',386),
  ('lhs -> { lhsconcat }','lhs',3,'p_lhs','svyacc.py',387),
  ('lhsconcat -> lhs','lhsconcat',1,'p_lhsconat','svyacc.py',401),
  ('lhsconcat -> lhs , lhsconcat','lhsconcat',3,'p_lhsconat','svyacc.py',402),
  ('wireexpr -> wireval','wireexpr',1,'p_wireexpr','svyacc.py',414),
  ('wireexpr -> wireval wireop wireexpr','wireexpr',3,'p_wireexpr','svyacc.py',415),
  ('wireexpr -> wireval ? wireexpr : wireexpr','wireexpr',5,'p_wireexpr','svyacc.py',416),
  ('wireval -> ALLHIGH','wireval',1,'p_wireval_0','svyacc.py',430),
  ('wireval -> ALLLOW','wireval',1,'p_wireval_0','svyacc.py',431),
  ('wireval -> LITWIRE','wireval',1,'p_wireval_0','svyacc.py',432),
  ('wireval -> arithexpr','wireval',1,'p_wireval_0','svyacc.py',433),
  ('wireval -> { wireconcat }','wireval',3,'p_wireval_0','svyacc.py',434),
  ('wireval -> ( wireexpr )','wireval',3,'p_wireval_0','svyacc.py',435),
  ('wireval -> ID [ arithexpr : arithexpr ]','wireval',6,'p_wireval_0','svyacc.py',436),
  ('wireval -> ID [ wireexpr ]','wireval',4,'p_wireval_0','svyacc.py',437),
  ('wireval -> unaop wireval','wireval',2,'p_wireval_0','svyacc.py',438),
  ('unaop -> ~','unaop',1,'p_unaop','svyacc.py',457),
  ('unaop -> &','unaop',1,'p_unaop','svyacc.py',458),
  ('unaop -> ^','unaop',1,'p_unaop','svyacc.py',459),
  ('unaop -> |','unaop',1,'p_unaop','svyacc.py',460),
  ('wireval -> ID','wireval',1,'p_wireval_1','svyacc.py',467),
  ('wireconcat -> wireexpr','wireconcat',1,'p_wireconcat','svyacc.py',475),
  ('wireconcat -> wireexpr , wireconcat','wireconcat',3,'p_wireconcat','svyacc.py',476),
  ('wireop -> +','wireop',1,'p_wireop','svyacc.py',487),
  ('wireop -> -','wireop',1,'p_wireop','svyacc.py',488),
  ('wireop -> *','wireop',1,'p_wireop','svyacc.py',489),
  ('wireop -> &','wireop',1,'p_wireop','svyacc.py',490),
  ('wireop -> |','wireop',1,'p_wireop','svyacc.py',491),
  ('wireop -> ^','wireop',1,'p_wireop','svyacc.py',492),
  ('wireop -> <','wireop',1,'p_wireop','svyacc.py',493),
  ('wireop -> >','wireop',1,'p_wireop','svyacc.py',494),
  ('wireop -> LSHIFT','wireop',1,'p_wireop','svyacc.py',495),
  ('wireop -> RSHIFT','wireop',1,'p_wireop','svyacc.py',496),
  ('wireop -> EQ','wireop',1,'p_wireop','svyacc.py',497),
  ('wireop -> GEQ','wireop',1,'p_wireop','svyacc.py',498),
  ('wireop -> LEQ','wireop',1,'p_wireop','svyacc.py',499),
  ('moduleinst -> ID ID ( modportassign )','moduleinst',5,'p_moduleinst','svyacc.py',507),
  ('modportassign -> oneportassign','modportassign',1,'p_modportassign','svyacc.py',513),
  ('modportassign -> oneportassign , modportassign','modportassign',3,'p_modportassign','svyacc.py',514),
  ('modportassign -> empty','modportassign',1,'p_modportassign','svyacc.py',515),
  ('oneportassign -> wireexpr','oneportassign',1,'p_oneportassign','svyacc.py',520),
  ('oneportassign -> . ID ( wireexpr )','oneportassign',5,'p_oneportassign','svyacc.py',521),
  ('empty -> <empty>','empty',0,'p_empty','svyacc.py',527),
]
