
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ALLHIGH ALLLOW ALWAYS ALWAYSCOMB ALWAYSFF ASSIGN BEGIN ELSE END ENDMODULE EQ GEQ ID IF INPUT LEQ LITWIRE LOCALPARAM LOGIC LSHIFT MODULE NEGEDGE NONBLOCK NUMBER OUTPUT PARAMETER POSEDGE REG RSHIFT WIRE\n    source : moduledec source \n           | empty\n    \n    moduledec : MODULE ID paramdec portdec ';' modulecontent ENDMODULE\n              | MODULE ID portdec ';' modulecontent ENDMODULE\n    \n    paramdec : '#' '(' params ')'\n    \n    params : oneparam paramplus \n           | empty\n    \n    paramplus : ',' oneparam paramplus \n              | empty\n    \n    oneparam : PARAMETER ID '=' arithexpr\n    \n    arithexpr : NUMBER\n              | ID\n    \n    portdec : '(' ports \n    \n    ports : porttype  portplus\n          | ')'\n    \n    portplus : wireslice idsterminal portplus \n             | empty\n    \n    idsterminal : ID portterminal\n                | ID ',' idsterminal\n    \n    portterminal : ')'\n                 | ',' porttype\n    \n    wireslice : '[' arithexpr ':' arithexpr ']'\n              | empty\n    \n    porttype : inout\n             | inout wiretype\n    \n    inout : INPUT\n          | OUTPUT\n    \n    modulecontent : wiredec ';' modulecontent\n                  | assign ';' modulecontent\n                  | always modulecontent\n                  | moduleinst ';' modulecontent\n                  | empty\n    \n    wiredec : wiretype '[' arithexpr ':' arithexpr ']' idassigns\n            | wiretype '[' arithexpr ':' arithexpr ']' ID '[' arithexpr ':' arithexpr ']'\n            | wiretype idassigns\n    \n    idassigns : oneidassign \n              | oneidassign ',' idassigns\n    \n    oneidassign : ID \n                | ID '=' wireexpr\n    \n    wiretype : WIRE\n             | REG\n             | LOGIC\n    \n    assign : ASSIGN lhs '=' wireexpr\n    \n    always : ALWAYS '@' sensitivity alwayscontblock\n           | ALWAYSFF '@' sensitivity alwayscontblock\n           | ALWAYSCOMB alwayscontblock\n    \n    sensitivity : '(' edge ID ')'\n    \n    edge : POSEDGE\n         | NEGEDGE\n    \n    alwayscontblock : BEGIN alwayscont END \n    \n    alwayscont : oneassign ';' alwayscont\n               | ifblock alwayscont\n               | ifblock elseblock alwayscont\n               | empty\n    \n    oneassign : lhs '=' wireexpr\n              | lhs NONBLOCK wireexpr\n    \n    ifblock : IF '(' wireexpr ')' BEGIN alwayscont END\n    \n    elseblock : ELSE ifblock\n              | ELSE ifblock elseblock\n              | ELSE BEGIN alwayscont END\n    \n    lhs : ID\n        | ID '[' arithexpr ':' arithexpr ']'\n        | '{' lhsconcat '}'\n    \n    lhsconcat : lhs\n              | lhs ',' lhsconcat\n    \n    wireexpr : wireval\n             | wireval wireop wireexpr\n             | wireval '?' wireexpr ':' wireexpr\n    \n    wireval : ALLHIGH\n            | ALLLOW\n            | LITWIRE\n            | NUMBER\n            | '{' wireconcat '}'\n            | '(' wireexpr ')'\n            | ID '[' arithexpr ':' arithexpr ']'\n            | ID '[' wireexpr ']'\n            | unaop wireval\n    \n    unaop : '~'\n          | '&'\n          | '^'\n          | '|'\n    \n    wireval : ID\n    \n    wireconcat : wireexpr\n               | wireexpr ',' wireconcat\n    \n    wireop : '+'\n           | '-'\n           | '*'\n           | '&'\n           | '|'\n           | '^'\n           | '<'\n           | '>'\n           | LSHIFT\n           | RSHIFT\n           | EQ\n           | GEQ\n           | LEQ\n    \n    moduleinst : ID ID '(' modportassign ')'\n    \n    modportassign : oneportassign\n                  | oneportassign ',' modportassign\n                  | empty\n    \n    oneportassign : wireexpr\n                  | '.' ID '(' wireexpr ')'\n    \n    empty : \n    "
    
_lr_action_items = {'MODULE':([0,2,47,73,],[4,4,-4,-3,]),'$end':([0,1,2,3,5,47,73,],[-104,0,-104,-2,-1,-4,-3,]),'ID':([4,12,15,17,18,19,20,21,25,28,29,33,34,35,39,41,42,43,44,48,49,51,52,58,61,62,68,74,79,80,81,82,90,95,97,98,99,100,102,107,113,114,115,116,117,118,119,125,126,127,128,129,130,131,132,134,136,137,138,141,142,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,168,173,174,178,185,189,190,193,196,199,204,205,209,213,214,],[6,21,-104,-24,-26,-27,21,46,21,54,57,-40,-41,-42,67,69,-23,72,-25,21,21,21,72,57,-46,57,-104,101,101,54,101,72,57,72,-18,69,-20,72,101,148,101,101,-78,-79,-80,-81,72,57,-44,170,-48,-49,-45,-50,57,57,101,101,101,-19,-21,179,101,101,101,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,72,-58,57,-22,101,101,202,-59,72,101,-60,57,72,-57,72,]),'#':([6,],[9,]),'(':([6,7,9,46,59,60,63,74,79,81,93,102,113,114,115,116,117,118,136,137,138,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,185,189,199,],[10,10,13,74,86,86,-5,102,102,102,138,102,102,102,-78,-79,-80,-81,102,102,102,102,102,185,102,102,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,102,102,102,]),';':([8,11,14,15,16,17,18,19,23,24,26,33,34,35,40,42,44,53,54,55,68,89,96,97,99,101,108,109,110,111,112,120,121,122,141,142,146,166,175,176,183,186,188,197,201,202,208,211,216,],[12,20,-13,-104,-15,-24,-26,-27,48,49,51,-40,-41,-42,-14,-17,-25,-35,-38,-36,-104,132,-16,-18,-20,-82,-66,-69,-70,-71,-72,-39,-37,-43,-19,-21,-98,-77,-55,-56,-74,-67,-73,-76,-33,-38,-68,-75,-34,]),')':([10,13,36,37,38,64,66,69,71,72,74,94,101,103,104,105,106,108,109,110,111,112,139,140,145,147,166,170,177,183,184,186,188,197,198,207,208,211,],[16,-104,63,-104,-7,-6,-9,99,-11,-12,-104,-104,-82,146,-99,-101,-102,-66,-69,-70,-71,-72,-8,-10,183,-104,-77,192,195,-74,-100,-67,-73,-76,207,-103,-68,-75,]),'INPUT':([10,98,],[18,18,]),'OUTPUT':([10,98,],[19,19,]),'ASSIGN':([12,20,25,48,49,51,61,126,130,131,],[29,29,29,29,29,29,-46,-44,-45,-50,]),'ALWAYS':([12,20,25,48,49,51,61,126,130,131,],[30,30,30,30,30,30,-46,-44,-45,-50,]),'ALWAYSFF':([12,20,25,48,49,51,61,126,130,131,],[31,31,31,31,31,31,-46,-44,-45,-50,]),'ALWAYSCOMB':([12,20,25,48,49,51,61,126,130,131,],[32,32,32,32,32,32,-46,-44,-45,-50,]),'ENDMODULE':([12,20,22,25,27,45,48,49,50,51,61,75,76,77,126,130,131,],[-104,-104,47,-104,-32,73,-104,-104,-30,-104,-46,-28,-29,-31,-44,-45,-50,]),'WIRE':([12,17,18,19,20,25,48,49,51,61,126,130,131,],[33,33,-26,-27,33,33,33,33,33,-46,-44,-45,-50,]),'REG':([12,17,18,19,20,25,48,49,51,61,126,130,131,],[34,34,-26,-27,34,34,34,34,34,-46,-44,-45,-50,]),'LOGIC':([12,17,18,19,20,25,48,49,51,61,126,130,131,],[35,35,-26,-27,35,35,35,35,35,-46,-44,-45,-50,]),'PARAMETER':([13,65,],[39,39,]),'[':([15,17,18,19,28,33,34,35,44,57,68,97,99,101,141,142,179,202,],[43,-24,-26,-27,52,-40,-41,-42,-25,82,43,-18,-20,144,-19,-21,144,209,]),'{':([29,58,62,74,79,81,90,102,113,114,115,116,117,118,125,132,134,136,137,138,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,173,174,185,189,193,199,204,205,213,],[58,58,58,113,113,113,58,113,113,113,-78,-79,-80,-81,58,58,58,113,113,113,113,113,113,113,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-58,58,113,113,-59,113,-60,58,-57,]),'@':([30,31,],[59,60,]),'BEGIN':([32,85,87,135,192,195,],[62,62,62,174,-47,205,]),',':([37,54,55,57,69,71,72,84,94,101,104,106,108,109,110,111,112,120,124,140,165,166,183,186,188,197,202,203,207,208,211,],[65,-38,80,-61,98,-11,-12,125,65,-82,147,-102,-66,-69,-70,-71,-72,-39,-63,-10,189,-77,-74,-67,-73,-76,-38,-62,-103,-68,-75,]),'NUMBER':([43,52,74,79,81,82,95,100,102,113,114,115,116,117,118,119,136,137,138,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,168,185,189,196,199,209,214,],[71,71,112,112,112,71,71,71,112,112,112,-78,-79,-80,-81,71,112,112,112,182,112,112,112,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,71,112,112,71,112,71,71,]),'=':([54,56,57,67,92,124,202,203,],[79,81,-61,95,136,-63,79,-62,]),'}':([57,83,84,101,108,109,110,111,112,124,164,165,166,169,183,186,188,197,200,203,208,211,],[-61,124,-64,-82,-66,-69,-70,-71,-72,-63,188,-83,-77,-65,-74,-67,-73,-76,-84,-62,-68,-75,]),'NONBLOCK':([57,92,124,203,],[-61,137,-63,-62,]),'IF':([62,90,132,134,135,173,174,193,204,205,213,],[93,93,93,93,93,-58,93,-59,-60,93,-57,]),'END':([62,88,90,91,132,133,134,171,172,173,174,193,194,204,205,210,213,],[-104,131,-104,-54,-104,-52,-104,-51,-53,-58,-104,-59,204,-60,-104,213,-57,]),':':([70,71,72,78,101,108,109,110,111,112,123,166,179,180,182,183,186,187,188,197,208,211,212,],[100,-11,-12,119,-82,-66,-69,-70,-71,-72,168,-77,-12,196,-11,-74,-67,199,-73,-76,-68,-75,214,]),']':([71,72,101,108,109,110,111,112,143,166,167,179,181,182,183,186,188,191,197,206,208,211,215,],[-11,-12,-82,-66,-69,-70,-71,-72,178,-77,190,-82,197,-72,-74,-67,-73,203,-76,211,-68,-75,216,]),'.':([74,147,],[107,107,]),'ALLHIGH':([74,79,81,102,113,114,115,116,117,118,136,137,138,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,185,189,199,],[109,109,109,109,109,109,-78,-79,-80,-81,109,109,109,109,109,109,109,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,109,109,109,]),'ALLLOW':([74,79,81,102,113,114,115,116,117,118,136,137,138,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,185,189,199,],[110,110,110,110,110,110,-78,-79,-80,-81,110,110,110,110,110,110,110,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,110,110,110,]),'LITWIRE':([74,79,81,102,113,114,115,116,117,118,136,137,138,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,185,189,199,],[111,111,111,111,111,111,-78,-79,-80,-81,111,111,111,111,111,111,111,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,111,111,111,]),'~':([74,79,81,102,113,114,115,116,117,118,136,137,138,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,185,189,199,],[115,115,115,115,115,115,-78,-79,-80,-81,115,115,115,115,115,115,115,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,115,115,115,]),'&':([74,79,81,101,102,108,109,110,111,112,113,114,115,116,117,118,136,137,138,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,179,182,183,185,188,189,197,199,211,],[116,116,116,-82,116,154,-69,-70,-71,-72,116,116,-78,-79,-80,-81,116,116,116,116,116,116,116,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-77,-82,-72,-74,116,-73,116,-76,116,-75,]),'^':([74,79,81,101,102,108,109,110,111,112,113,114,115,116,117,118,136,137,138,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,179,182,183,185,188,189,197,199,211,],[117,117,117,-82,117,156,-69,-70,-71,-72,117,117,-78,-79,-80,-81,117,117,117,117,117,117,117,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-77,-82,-72,-74,117,-73,117,-76,117,-75,]),'|':([74,79,81,101,102,108,109,110,111,112,113,114,115,116,117,118,136,137,138,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,166,179,182,183,185,188,189,197,199,211,],[118,118,118,-82,118,155,-69,-70,-71,-72,118,118,-78,-79,-80,-81,118,118,118,118,118,118,118,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-77,-82,-72,-74,118,-73,118,-76,118,-75,]),'POSEDGE':([86,],[128,]),'NEGEDGE':([86,],[129,]),'ELSE':([90,173,213,],[135,135,-57,]),'?':([101,108,109,110,111,112,166,179,182,183,188,197,211,],[-82,150,-69,-70,-71,-72,-77,-82,-72,-74,-73,-76,-75,]),'+':([101,108,109,110,111,112,166,179,182,183,188,197,211,],[-82,151,-69,-70,-71,-72,-77,-82,-72,-74,-73,-76,-75,]),'-':([101,108,109,110,111,112,166,179,182,183,188,197,211,],[-82,152,-69,-70,-71,-72,-77,-82,-72,-74,-73,-76,-75,]),'*':([101,108,109,110,111,112,166,179,182,183,188,197,211,],[-82,153,-69,-70,-71,-72,-77,-82,-72,-74,-73,-76,-75,]),'<':([101,108,109,110,111,112,166,179,182,183,188,197,211,],[-82,157,-69,-70,-71,-72,-77,-82,-72,-74,-73,-76,-75,]),'>':([101,108,109,110,111,112,166,179,182,183,188,197,211,],[-82,158,-69,-70,-71,-72,-77,-82,-72,-74,-73,-76,-75,]),'LSHIFT':([101,108,109,110,111,112,166,179,182,183,188,197,211,],[-82,159,-69,-70,-71,-72,-77,-82,-72,-74,-73,-76,-75,]),'RSHIFT':([101,108,109,110,111,112,166,179,182,183,188,197,211,],[-82,160,-69,-70,-71,-72,-77,-82,-72,-74,-73,-76,-75,]),'EQ':([101,108,109,110,111,112,166,179,182,183,188,197,211,],[-82,161,-69,-70,-71,-72,-77,-82,-72,-74,-73,-76,-75,]),'GEQ':([101,108,109,110,111,112,166,179,182,183,188,197,211,],[-82,162,-69,-70,-71,-72,-77,-82,-72,-74,-73,-76,-75,]),'LEQ':([101,108,109,110,111,112,166,179,182,183,188,197,211,],[-82,163,-69,-70,-71,-72,-77,-82,-72,-74,-73,-76,-75,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'source':([0,2,],[1,5,]),'moduledec':([0,2,],[2,2,]),'empty':([0,2,12,13,15,20,25,37,48,49,51,62,68,74,90,94,132,134,147,174,205,],[3,3,27,38,42,27,27,66,27,27,27,91,42,105,91,66,91,91,105,91,91,]),'paramdec':([6,],[7,]),'portdec':([6,7,],[8,11,]),'ports':([10,],[14,]),'porttype':([10,98,],[15,142,]),'inout':([10,98,],[17,17,]),'modulecontent':([12,20,25,48,49,51,],[22,45,50,75,76,77,]),'wiredec':([12,20,25,48,49,51,],[23,23,23,23,23,23,]),'assign':([12,20,25,48,49,51,],[24,24,24,24,24,24,]),'always':([12,20,25,48,49,51,],[25,25,25,25,25,25,]),'moduleinst':([12,20,25,48,49,51,],[26,26,26,26,26,26,]),'wiretype':([12,17,20,25,48,49,51,],[28,44,28,28,28,28,28,]),'params':([13,],[36,]),'oneparam':([13,65,],[37,94,]),'portplus':([15,68,],[40,96,]),'wireslice':([15,68,],[41,41,]),'idassigns':([28,80,190,],[53,121,201,]),'oneidassign':([28,80,190,],[55,55,55,]),'lhs':([29,58,62,90,125,132,134,174,205,],[56,84,92,92,84,92,92,92,92,]),'alwayscontblock':([32,85,87,],[61,126,130,]),'paramplus':([37,94,],[64,139,]),'idsterminal':([41,98,],[68,141,]),'arithexpr':([43,52,82,95,100,119,144,168,196,209,214,],[70,78,123,140,143,167,180,191,206,212,215,]),'lhsconcat':([58,125,],[83,169,]),'sensitivity':([59,60,],[85,87,]),'alwayscont':([62,90,132,134,174,205,],[88,133,171,172,194,210,]),'oneassign':([62,90,132,134,174,205,],[89,89,89,89,89,89,]),'ifblock':([62,90,132,134,135,174,205,],[90,90,90,90,173,90,90,]),'portterminal':([69,],[97,]),'modportassign':([74,147,],[103,184,]),'oneportassign':([74,147,],[104,104,]),'wireexpr':([74,79,81,102,113,136,137,138,144,147,149,150,185,189,199,],[106,120,122,145,165,175,176,177,181,106,186,187,198,165,208,]),'wireval':([74,79,81,102,113,114,136,137,138,144,147,149,150,185,189,199,],[108,108,108,108,108,166,108,108,108,108,108,108,108,108,108,108,]),'unaop':([74,79,81,102,113,114,136,137,138,144,147,149,150,185,189,199,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'edge':([86,],[127,]),'elseblock':([90,173,],[134,193,]),'wireop':([108,],[149,]),'wireconcat':([113,189,],[164,200,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> source","S'",1,None,None,None),
  ('source -> moduledec source','source',2,'p_source','svyacc.py',12),
  ('source -> empty','source',1,'p_source','svyacc.py',13),
  ('moduledec -> MODULE ID paramdec portdec ; modulecontent ENDMODULE','moduledec',7,'p_moduledec','svyacc.py',26),
  ('moduledec -> MODULE ID portdec ; modulecontent ENDMODULE','moduledec',6,'p_moduledec','svyacc.py',27),
  ('paramdec -> # ( params )','paramdec',4,'p_paramdec','svyacc.py',42),
  ('params -> oneparam paramplus','params',2,'p_params','svyacc.py',50),
  ('params -> empty','params',1,'p_params','svyacc.py',51),
  ('paramplus -> , oneparam paramplus','paramplus',3,'p_paramplus','svyacc.py',64),
  ('paramplus -> empty','paramplus',1,'p_paramplus','svyacc.py',65),
  ('oneparam -> PARAMETER ID = arithexpr','oneparam',4,'p_oneparam','svyacc.py',78),
  ('arithexpr -> NUMBER','arithexpr',1,'p_arithexpr','svyacc.py',86),
  ('arithexpr -> ID','arithexpr',1,'p_arithexpr','svyacc.py',87),
  ('portdec -> ( ports','portdec',2,'p_portdec','svyacc.py',95),
  ('ports -> porttype portplus','ports',2,'p_ports','svyacc.py',103),
  ('ports -> )','ports',1,'p_ports','svyacc.py',104),
  ('portplus -> wireslice idsterminal portplus','portplus',3,'p_portplus','svyacc.py',122),
  ('portplus -> empty','portplus',1,'p_portplus','svyacc.py',123),
  ('idsterminal -> ID portterminal','idsterminal',2,'p_idsterminal','svyacc.py',136),
  ('idsterminal -> ID , idsterminal','idsterminal',3,'p_idsterminal','svyacc.py',137),
  ('portterminal -> )','portterminal',1,'p_portterminal','svyacc.py',148),
  ('portterminal -> , porttype','portterminal',2,'p_portterminal','svyacc.py',149),
  ('wireslice -> [ arithexpr : arithexpr ]','wireslice',5,'p_wireslice','svyacc.py',159),
  ('wireslice -> empty','wireslice',1,'p_wireslice','svyacc.py',160),
  ('porttype -> inout','porttype',1,'p_porttype','svyacc.py',171),
  ('porttype -> inout wiretype','porttype',2,'p_porttype','svyacc.py',172),
  ('inout -> INPUT','inout',1,'p_inout','svyacc.py',184),
  ('inout -> OUTPUT','inout',1,'p_inout','svyacc.py',185),
  ('modulecontent -> wiredec ; modulecontent','modulecontent',3,'p_modulecontent','svyacc.py',192),
  ('modulecontent -> assign ; modulecontent','modulecontent',3,'p_modulecontent','svyacc.py',193),
  ('modulecontent -> always modulecontent','modulecontent',2,'p_modulecontent','svyacc.py',194),
  ('modulecontent -> moduleinst ; modulecontent','modulecontent',3,'p_modulecontent','svyacc.py',195),
  ('modulecontent -> empty','modulecontent',1,'p_modulecontent','svyacc.py',196),
  ('wiredec -> wiretype [ arithexpr : arithexpr ] idassigns','wiredec',7,'p_wiredec','svyacc.py',218),
  ('wiredec -> wiretype [ arithexpr : arithexpr ] ID [ arithexpr : arithexpr ]','wiredec',12,'p_wiredec','svyacc.py',219),
  ('wiredec -> wiretype idassigns','wiredec',2,'p_wiredec','svyacc.py',220),
  ('idassigns -> oneidassign','idassigns',1,'p_ids','svyacc.py',249),
  ('idassigns -> oneidassign , idassigns','idassigns',3,'p_ids','svyacc.py',250),
  ('oneidassign -> ID','oneidassign',1,'p_idassign','svyacc.py',260),
  ('oneidassign -> ID = wireexpr','oneidassign',3,'p_idassign','svyacc.py',261),
  ('wiretype -> WIRE','wiretype',1,'p_wiretype','svyacc.py',272),
  ('wiretype -> REG','wiretype',1,'p_wiretype','svyacc.py',273),
  ('wiretype -> LOGIC','wiretype',1,'p_wiretype','svyacc.py',274),
  ('assign -> ASSIGN lhs = wireexpr','assign',4,'p_assign','svyacc.py',282),
  ('always -> ALWAYS @ sensitivity alwayscontblock','always',4,'p_always','svyacc.py',290),
  ('always -> ALWAYSFF @ sensitivity alwayscontblock','always',4,'p_always','svyacc.py',291),
  ('always -> ALWAYSCOMB alwayscontblock','always',2,'p_always','svyacc.py',292),
  ('sensitivity -> ( edge ID )','sensitivity',4,'p_sensitivity','svyacc.py',305),
  ('edge -> POSEDGE','edge',1,'p_edge','svyacc.py',312),
  ('edge -> NEGEDGE','edge',1,'p_edge','svyacc.py',313),
  ('alwayscontblock -> BEGIN alwayscont END','alwayscontblock',3,'p_alwayscontblock','svyacc.py',321),
  ('alwayscont -> oneassign ; alwayscont','alwayscont',3,'p_alwayscont','svyacc.py',328),
  ('alwayscont -> ifblock alwayscont','alwayscont',2,'p_alwayscont','svyacc.py',329),
  ('alwayscont -> ifblock elseblock alwayscont','alwayscont',3,'p_alwayscont','svyacc.py',330),
  ('alwayscont -> empty','alwayscont',1,'p_alwayscont','svyacc.py',331),
  ('oneassign -> lhs = wireexpr','oneassign',3,'p_oneassign','svyacc.py',348),
  ('oneassign -> lhs NONBLOCK wireexpr','oneassign',3,'p_oneassign','svyacc.py',349),
  ('ifblock -> IF ( wireexpr ) BEGIN alwayscont END','ifblock',7,'p_ifblock','svyacc.py',360),
  ('elseblock -> ELSE ifblock','elseblock',2,'p_elseblock','svyacc.py',367),
  ('elseblock -> ELSE ifblock elseblock','elseblock',3,'p_elseblock','svyacc.py',368),
  ('elseblock -> ELSE BEGIN alwayscont END','elseblock',4,'p_elseblock','svyacc.py',369),
  ('lhs -> ID','lhs',1,'p_lhs','svyacc.py',386),
  ('lhs -> ID [ arithexpr : arithexpr ]','lhs',6,'p_lhs','svyacc.py',387),
  ('lhs -> { lhsconcat }','lhs',3,'p_lhs','svyacc.py',388),
  ('lhsconcat -> lhs','lhsconcat',1,'p_lhsconat','svyacc.py',402),
  ('lhsconcat -> lhs , lhsconcat','lhsconcat',3,'p_lhsconat','svyacc.py',403),
  ('wireexpr -> wireval','wireexpr',1,'p_wireexpr','svyacc.py',415),
  ('wireexpr -> wireval wireop wireexpr','wireexpr',3,'p_wireexpr','svyacc.py',416),
  ('wireexpr -> wireval ? wireexpr : wireexpr','wireexpr',5,'p_wireexpr','svyacc.py',417),
  ('wireval -> ALLHIGH','wireval',1,'p_wireval_0','svyacc.py',431),
  ('wireval -> ALLLOW','wireval',1,'p_wireval_0','svyacc.py',432),
  ('wireval -> LITWIRE','wireval',1,'p_wireval_0','svyacc.py',433),
  ('wireval -> NUMBER','wireval',1,'p_wireval_0','svyacc.py',434),
  ('wireval -> { wireconcat }','wireval',3,'p_wireval_0','svyacc.py',435),
  ('wireval -> ( wireexpr )','wireval',3,'p_wireval_0','svyacc.py',436),
  ('wireval -> ID [ arithexpr : arithexpr ]','wireval',6,'p_wireval_0','svyacc.py',437),
  ('wireval -> ID [ wireexpr ]','wireval',4,'p_wireval_0','svyacc.py',438),
  ('wireval -> unaop wireval','wireval',2,'p_wireval_0','svyacc.py',439),
  ('unaop -> ~','unaop',1,'p_unaop','svyacc.py',458),
  ('unaop -> &','unaop',1,'p_unaop','svyacc.py',459),
  ('unaop -> ^','unaop',1,'p_unaop','svyacc.py',460),
  ('unaop -> |','unaop',1,'p_unaop','svyacc.py',461),
  ('wireval -> ID','wireval',1,'p_wireval_1','svyacc.py',468),
  ('wireconcat -> wireexpr','wireconcat',1,'p_wireconcat','svyacc.py',476),
  ('wireconcat -> wireexpr , wireconcat','wireconcat',3,'p_wireconcat','svyacc.py',477),
  ('wireop -> +','wireop',1,'p_wireop','svyacc.py',488),
  ('wireop -> -','wireop',1,'p_wireop','svyacc.py',489),
  ('wireop -> *','wireop',1,'p_wireop','svyacc.py',490),
  ('wireop -> &','wireop',1,'p_wireop','svyacc.py',491),
  ('wireop -> |','wireop',1,'p_wireop','svyacc.py',492),
  ('wireop -> ^','wireop',1,'p_wireop','svyacc.py',493),
  ('wireop -> <','wireop',1,'p_wireop','svyacc.py',494),
  ('wireop -> >','wireop',1,'p_wireop','svyacc.py',495),
  ('wireop -> LSHIFT','wireop',1,'p_wireop','svyacc.py',496),
  ('wireop -> RSHIFT','wireop',1,'p_wireop','svyacc.py',497),
  ('wireop -> EQ','wireop',1,'p_wireop','svyacc.py',498),
  ('wireop -> GEQ','wireop',1,'p_wireop','svyacc.py',499),
  ('wireop -> LEQ','wireop',1,'p_wireop','svyacc.py',500),
  ('moduleinst -> ID ID ( modportassign )','moduleinst',5,'p_moduleinst','svyacc.py',508),
  ('modportassign -> oneportassign','modportassign',1,'p_modportassign','svyacc.py',514),
  ('modportassign -> oneportassign , modportassign','modportassign',3,'p_modportassign','svyacc.py',515),
  ('modportassign -> empty','modportassign',1,'p_modportassign','svyacc.py',516),
  ('oneportassign -> wireexpr','oneportassign',1,'p_oneportassign','svyacc.py',521),
  ('oneportassign -> . ID ( wireexpr )','oneportassign',5,'p_oneportassign','svyacc.py',522),
  ('empty -> <empty>','empty',0,'p_empty','svyacc.py',528),
]
